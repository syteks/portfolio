worker_processes auto;
error_log /dev/stderr warn; # Log errors to stderr for Cloud Run
pid /run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main '$remote_addr - $remote_user [$time_local] "$request" '
                     '$status $body_bytes_sent "$http_referer" '
                     '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /dev/stdout main; # Log access to stdout for Cloud Run

    sendfile        on;
    tcp_nopush     on;
    tcp_nodelay    on;
    keepalive_timeout  65;
    types_hash_max_size 2048;

    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_types application/atom+xml application/javascript application/json application/rss+xml \
               application/vnd.ms-fontobject application/x-web-app-manifest+json application/xhtml+xml \
               application/xml font/opentype image/svg+xml image/x-icon text/css text/plain text/xml;

    # Cloud Run specific server block
    server {
        # Cloud Run injects the PORT env variable. Nginx needs to listen on it.
        # This uses the envsubst command if you're using a Cloud Build step,
        # but often Nginx can pick this up via listen ${PORT};
        # For Alpine Nginx, using `envsubst` to replace variables at runtime:
        listen ${PORT}; # This is the ideal way if Nginx handles env vars directly
        # If Nginx doesn't directly support ${PORT} (some versions/builds),
        # you might need a wrapper script or use a fixed port like 8080 and map to $PORT.
        # However, `listen ${PORT};` is typically supported in modern Nginx with env vars.

        server_name localhost; # Not strictly necessary for Cloud Run

        root /var/www/public;
        index index.php index.html index.htm;
        charset utf-8;

        # Laravel security headers
        add_header X-Frame-Options "SAMEORIGIN";
        add_header X-Content-Type-Options "nosniff";
        add_header X-XSS-Protection "1; mode=block";

        # Serve Vite assets with long-term caching
        location ~ ^/build/.+\.(css|js|woff2|woff|ttf|eot|svg|png|jpg|jpeg|gif|ico|webp|avif)$ {
            try_files $uri =404;
            expires 1y;
            access_log off;
            log_not_found off;
            add_header Cache-Control "public, max-age=31536000, immutable";
        }

        # Catch-all for Laravel routing
        location / {
            try_files $uri $uri/ /index.php?$query_string;
        }

        # Prevent access to dotfiles
        location ~ /\.(?!well-known).* {
            deny all;
        }

        # Pass PHP requests to PHP-FPM
        location ~ \.php$ {
            # PHP-FPM is running in the same container, listening on port 9000
            fastcgi_pass 127.0.0.1:9000;
            fastcgi_index index.php;
            fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
            include fastcgi_params;
            fastcgi_buffers 16 16k;
            fastcgi_buffer_size 32k;
        }
    }
}
